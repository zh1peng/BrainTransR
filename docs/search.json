[{"path":"https://zh1peng.github.io/BrainEnrich/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhipeng Cao. Author, maintainer.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cao Z (2024). BrainEnrich: Revealing Biological Insights Imaging-Derived Features Transcriptomic Enrichment. R package version 1.0, https://zh1peng.github.io/BrainEnrich/.","code":"@Manual{,   title = {BrainEnrich: Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment},   author = {Zhipeng Cao},   year = {2024},   note = {R package version 1.0},   url = {https://zh1peng.github.io/BrainEnrich/}, }"},{"path":[]},{"path":"https://zh1peng.github.io/BrainEnrich/index.html","id":"aim-of-the-toolbox","dir":"","previous_headings":"","what":"Aim of the Toolbox 🎯","title":"Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment","text":"BrainEnrich R package designed facilitate correlation imaging-derived phenotypes transcriptional profiles. toolbox aims provide researchers clinicians robust statistical tools uncover molecular architectures associated cognitive functions, brain development, disorders.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/index.html","id":"timeline-of-development","dir":"","previous_headings":"","what":"Timeline of Development 🗓️","title":"Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment","text":"Q4 2023: Initial conceptualization development core functions. 🛠️ Q1 2024: Implementation competitive null models self-contained null models. 🧪 Q1 2024: Testing simulated datasets refinement statistical tests. 🔬 Q2 2024: Beta release community feedback additional testing. 🔄 Q3 2024: Incorporation feedback preparation CRAN submission. ✍️ Q4 2024: Submission CRAN publication accompanying paper. 📰","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation 💾","title":"Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment","text":"Please note brainEnrich currently development yet available installation. available, can installed GitHub via devtools package:","code":"# Install devtools if you haven't already install.packages(\"devtools\")  # Install brainEnrich from GitHub devtools::install_github(\"zh1peng/BrainEnrich\")"},{"path":"https://zh1peng.github.io/BrainEnrich/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage 📖","title":"Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment","text":"Instructions use toolbox provided , including example code.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/index.html","id":"to-do-list","dir":"","previous_headings":"","what":"To-Do List 📋","title":"Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment","text":"[x] Initialize project 2023/11/04 [x] Finalize manuscript revision. 🔧 [ ] Development core functions🔧 [ ] Create detailed vignettes major function. 📚 [ ] Optimize performance large datasets. ⚡ [ ] Conduct extensive testing real-world data. 🌏 [ ] Develop comprehensive test suite. ✅ [ ] Set continuous integration automated testing. 🔄 [ ] Prepare documentation public release. 📄","code":""},{"path":[]},{"path":"https://zh1peng.github.io/BrainEnrich/index.html","id":"versioning","dir":"","previous_headings":"","what":"Versioning 🏷️","title":"Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment","text":"use git versioning. versions available, see tags repository.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors 👩‍💻👨‍💻","title":"Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment","text":"Zhipeng Cao @ Xuhui Mental Health Center, Shanghai - Initial work - zh1peng","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/index.html","id":"license","dir":"","previous_headings":"","what":"License 📜","title":"Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment","text":"project licensed MIT License - see LICENSE.md file details.","code":""},{"path":[]},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"definitions-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"source-code-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"basic-permissions-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"protecting-users-legal-rights-from-anti-circumvention-law-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"conveying-verbatim-copies-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"conveying-modified-source-versions-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"conveying-non-source-forms-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"additional-terms-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"termination-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"acceptance-not-required-for-having-copies-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"automatic-licensing-of-downstream-recipients-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"patents-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"no-surrender-of-others-freedom-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"remote-network-interaction-use-with-the-gnu-general-public-license-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"revised-versions-of-this-license-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"disclaimer-of-warranty-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"limitation-of-liability-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"interpretation-of-sections-15-and-16-","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":[]},{"path":"https://zh1peng.github.io/BrainEnrich/Readme.html","id":"aim-of-the-toolbox","dir":"","previous_headings":"","what":"Aim of the Toolbox 🎯","title":"BrainEnrich: Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment 🧠🧬","text":"BrainEnrich R package designed facilitate correlation imaging-derived phenotypes transcriptional profiles. toolbox aims provide researchers clinicians robust statistical tools uncover molecular architectures associated cognitive functions, brain development, disorders.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/Readme.html","id":"timeline-of-development","dir":"","previous_headings":"","what":"Timeline of Development 🗓️","title":"BrainEnrich: Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment 🧠🧬","text":"Q4 2023: Initial conceptualization development core functions. 🛠️ Q1 2024: Implementation competitive null models self-contained null models. 🧪 Q1 2024: Testing simulated datasets refinement statistical tests. 🔬 Q2 2024: Beta release community feedback additional testing. 🔄 Q3 2024: Incorporation feedback preparation CRAN submission. ✍️ Q4 2024: Submission CRAN publication accompanying paper. 📰","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/Readme.html","id":"installation","dir":"","previous_headings":"","what":"Installation 💾","title":"BrainEnrich: Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment 🧠🧬","text":"Please note brainEnrich currently development yet available installation. available, can installed GitHub via devtools package:","code":"# Install devtools if you haven't already install.packages(\"devtools\")  # Install brainEnrich from GitHub devtools::install_github(\"zh1peng/BrainEnrich\")"},{"path":"https://zh1peng.github.io/BrainEnrich/Readme.html","id":"usage","dir":"","previous_headings":"","what":"Usage 📖","title":"BrainEnrich: Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment 🧠🧬","text":"Instructions use toolbox provided , including example code.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/Readme.html","id":"to-do-list","dir":"","previous_headings":"","what":"To-Do List 📋","title":"BrainEnrich: Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment 🧠🧬","text":"[x] Initialize project 2023/11/04 [x] Finalize manuscript revision. 🔧 [ ] Development core functions🔧 [ ] Create detailed vignettes major function. 📚 [ ] Optimize performance large datasets. ⚡ [ ] Conduct extensive testing real-world data. 🌏 [ ] Develop comprehensive test suite. ✅ [ ] Set continuous integration automated testing. 🔄 [ ] Prepare documentation public release. 📄","code":""},{"path":[]},{"path":"https://zh1peng.github.io/BrainEnrich/Readme.html","id":"versioning","dir":"","previous_headings":"","what":"Versioning 🏷️","title":"BrainEnrich: Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment 🧠🧬","text":"use git versioning. versions available, see tags repository.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/Readme.html","id":"authors","dir":"","previous_headings":"","what":"Authors 👩‍💻👨‍💻","title":"BrainEnrich: Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment 🧠🧬","text":"Zhipeng Cao @ Xuhui Mental Health Center, Shanghai - Initial work - zh1peng","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/Readme.html","id":"license","dir":"","previous_headings":"","what":"License 📜","title":"BrainEnrich: Revealing Biological Insights from Imaging-Derived Features through Transcriptomic Enrichment 🧠🧬","text":"project licensed MIT License - see LICENSE.md file details.","code":""},{"path":[]},{"path":"https://zh1peng.github.io/BrainEnrich/reference/aggregate_geneSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Gene Set Scores — aggregate_geneSet","title":"Aggregate Gene Set Scores — aggregate_geneSet","text":"Function aggregate geneList based geneSet, evaluating one geneSet time. function supports multiple aggregation methods specified user.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/aggregate_geneSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Gene Set Scores — aggregate_geneSet","text":"","code":"aggregate_geneSet(   geneList,   geneSet,   method = c(\"mean\", \"median\", \"meanabs\", \"meansqr\", \"maxmean\", \"ks_orig\", \"ks_weighted\",     \"ks_pos_neg_sum\", \"local_fdr\", \"sign_test\", \"rank_sum\", \"custom\") )"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/aggregate_geneSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Gene Set Scores — aggregate_geneSet","text":"geneList matrix genes models, column representing true null model. geneSet vector containing names genes gene set interest. method character string specifying method use aggregation. Options include 'mean', 'median', 'meanabs', 'meansqr', 'maxmean', 'sig_n', 'sign_test', 'rank_sum', 'ks_orig', 'ks_weighted', 'ks_sum', 'locfdr'. Default 'mean'.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/aggregate_geneSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Gene Set Scores — aggregate_geneSet","text":"Returns numeric score based specified aggregation method.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/aggregate_geneSetList.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Gene Set List in Parallel — aggregate_geneSetList","title":"Aggregate Gene Set List in Parallel — aggregate_geneSetList","text":"function aggregates gene sets parallel using parLapply function parallel package, ensuring cross-platform compatibility.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/aggregate_geneSetList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Gene Set List in Parallel — aggregate_geneSetList","text":"","code":"aggregate_geneSetList(geneList, geneSetList, method, n_cores = 1)"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/aggregate_geneSetList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Gene Set List in Parallel — aggregate_geneSetList","text":"geneList list genes. geneSetList list gene sets aggregated. n_cores Number cores use parallel processing. Default 1. set 0, uses available cores minus one. ... Additional arguments passed aggregate_geneSet function.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/aggregate_geneSetList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Gene Set List in Parallel — aggregate_geneSetList","text":"list aggregated gene set scores.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/aggregate_geneSetList_matching_coexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Gene Set List with Matching Coexpression in Parallel — aggregate_geneSetList_matching_coexp","title":"Aggregate Gene Set List with Matching Coexpression in Parallel — aggregate_geneSetList_matching_coexp","text":"function aggregates gene set scores parallel using pblapply pbapply package.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/aggregate_geneSetList_matching_coexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Gene Set List with Matching Coexpression in Parallel — aggregate_geneSetList_matching_coexp","text":"","code":"aggregate_geneSetList_matching_coexp(   geneList.true,   geneSetList,   sampled_geneSetList,   method,   n_cores = 1 )"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/aggregate_geneSetList_matching_coexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Gene Set List with Matching Coexpression in Parallel — aggregate_geneSetList_matching_coexp","text":"geneList.true m x 1 matrix true gene sets. Ensure include drop=FALSE subsetting. geneSetList list gene sets. sampled_geneSetList list sampled gene sets. method method used aggregation. n_cores Number cores use parallel processing. Default 1. set 0, uses available cores minus one.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/aggregate_geneSetList_matching_coexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Gene Set List with Matching Coexpression in Parallel — aggregate_geneSetList_matching_coexp","text":"list aggregated gene set scores.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/annoData_synGO.html","id":null,"dir":"Reference","previous_headings":"","what":"SynGO Annotation Data — annoData_synGO","title":"SynGO Annotation Data — annoData_synGO","text":"dataset contains annotation data fetched BrainEnrich package SynGO.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/annoData_synGO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SynGO Annotation Data — annoData_synGO","text":"","code":"annoData_synGO"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/annoData_synGO.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SynGO Annotation Data — annoData_synGO","text":"data frame various annotation data.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/annoData_synGO.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SynGO Annotation Data — annoData_synGO","text":"BrainEnrich::get_annoData(type = 'SynGO')","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brainenrich.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Brain Gene Set Analysis — brainenrich","title":"Perform Brain Gene Set Analysis — brainenrich","text":"function performs gene set analysis using brain data.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brainenrich.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Brain Gene Set Analysis — brainenrich","text":"","code":"brainenrich(   brain_data,   gene_data,   annoData,   cor_method = c(\"pearson\", \"spearman\", \"pls1c\", \"pls1w\", \"custom\"),   aggre_method = c(\"mean\", \"median\", \"meanabs\", \"meansqr\", \"maxmean\", \"ks_orig\",     \"ks_weighted\", \"ks_pos_neg_sum\", \"local_fdr\", \"sign_test\", \"rank_sum\", \"custom\"),   null_model = c(\"spin_brain\", \"resample_gene\", \"coexp_matched\"),   n_perm = 5000,   perm_id = NULL,   coord.l = NULL,   coord.r = NULL,   seed = NULL,   n_cores = 0,   minGSSize = 10,   maxGSSize = 200,   thres_type = c(\"sd\", \"percentile\"),   thres_val = 1,   pvalueCutoff = 0.05,   pAdjustMethod = \"fdr\",   matchcoexp_tol = 0.05,   matchcoexp_max_iter = 1e+06 )"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brainenrich.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Brain Gene Set Analysis — brainenrich","text":"brain_data data frame brain data. Region 1 column. gene_data data frame gene expression data. annoData environment containing annotation data. cor_method character string specifying correlation method. Default 'pearson'. options include 'spearman', 'pls1c', 'pls1w', 'custom'. aggre_method character string specifying aggregation method. Default 'mean'. options include 'median', 'meanabs', 'meansqr', 'maxmean', 'ks_orig', 'ks_weighted', 'ks_pos_neg_sum', 'local_fdr', 'sign_test', 'rank_sum', 'custom'. null_model character string specifying null model. Default 'spin_brain'. options include 'resample_gene', 'coexp_matched'. n_perm integer specifying number permutations. Default 5000. perm_id matrix permutation IDs. Default NULL. coord.l matrix left hemisphere coordinates. Default NULL. coord.r matrix right hemisphere coordinates. Default NULL. seed integer specifying seed reproducibility spinning brain. Default NULL. n_cores integer specifying number cores use. Default 0. minGSSize integer specifying minimum gene set size. Default 10. maxGSSize integer specifying maximum gene set size. Default 200. thres_type character string specifying threshold type core genes. Default 'sd'. option 'percentile'. thres_val numeric value specifying threshold value core genes. Default 1. pvalueCutoff numeric value specifying p-value cutoff output. Default 0.05. pAdjustMethod character string specifying method p-value adjustment. Default 'fdr'. matchcoexp_tol numeric value specifying tolerance matched co-expression. Lower value means better matching take much iterations. Default 0.05. matchcoexp_max_iter integer specifying maximum number iterations matched co-expression. Default 1000000.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brainenrich.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Brain Gene Set Analysis — brainenrich","text":"gseaResult object containing enrichment results.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brainscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Brain Scores for Gene Sets — brainscore","title":"Calculate Brain Scores for Gene Sets — brainscore","text":"function calculates scores gene sets based brain data.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brainscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Brain Scores for Gene Sets — brainscore","text":"","code":"brainscore(   brain_data,   gene_data,   annoData,   cor_method = c(\"pearson\", \"spearman\", \"pls1c\", \"pls1w\", \"custom\"),   aggre_method = c(\"mean\", \"median\", \"meanabs\", \"meansqr\", \"maxmean\", \"ks_orig\",     \"ks_weighted\", \"ks_pos_neg_sum\", \"local_fdr\", \"sign_test\", \"rank_sum\", \"custom\"),   prefix = NULL,   minGSSize = 10,   maxGSSize = 200 )"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brainscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Brain Scores for Gene Sets — brainscore","text":"brain_data data frame brain data. Region 1 column. gene_data data frame gene expression data. annoData environment containing annotation data. cor_method character string specifying correlation method. Default 'pearson'. options include 'spearman', 'pls1c', 'pls1w', 'custom'. aggre_method character string specifying aggregation method. Default 'mean'. options include 'median', 'meanabs', 'meansqr', 'maxmean', 'ks_orig', 'ks_weighted', 'ks_pos_neg_sum', 'local_fdr', 'sign_test', 'rank_sum', 'custom'. prefix character string prefixed column names result. Default NULL. minGSSize integer specifying minimum gene set size. Default 10. maxGSSize integer specifying maximum gene set size. Default 200.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brainscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Brain Scores for Gene Sets — brainscore","text":"data frame containing gene set scores regions rows gene sets columns.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brain_data_Cushing.html","id":null,"dir":"Reference","previous_headings":"","what":"Brain Data Cushing for Left Hemisphere — brain_data_Cushing","title":"Brain Data Cushing for Left Hemisphere — brain_data_Cushing","text":"dataset contains Cushing's data, filtered reordered based PC1 data regions starting 'L_' Desikan atlas.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brain_data_Cushing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Brain Data Cushing for Left Hemisphere — brain_data_Cushing","text":"","code":"brain_data_Cushing"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brain_data_Cushing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Brain Data Cushing for Left Hemisphere — brain_data_Cushing","text":"data frame rows regions columns Cohen's d values.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brain_data_Cushing.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Brain Data Cushing for Left Hemisphere — brain_data_Cushing","text":"read.csv('data-raw/desikan_cushing_data.csv')","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brain_data_PC1.html","id":null,"dir":"Reference","previous_headings":"","what":"Brain Data PC1 for Left Hemisphere — brain_data_PC1","title":"Brain Data PC1 for Left Hemisphere — brain_data_PC1","text":"dataset contains PC1 data filtered regions starting 'L_' Desikan atlas.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brain_data_PC1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Brain Data PC1 for Left Hemisphere — brain_data_PC1","text":"","code":"brain_data_PC1"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brain_data_PC1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Brain Data PC1 for Left Hemisphere — brain_data_PC1","text":"data frame rows regions columns PC1 data.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brain_data_PC1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Brain Data PC1 for Left Hemisphere — brain_data_PC1","text":"read.csv('data-raw/desikan_PC1_data.csv')","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brain_data_random.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Desikan region for testing brainscore function — brain_data_random","title":"Random Desikan region for testing brainscore function — brain_data_random","text":"Random Desikan region testing brainscore function","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brain_data_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Desikan region for testing brainscore function — brain_data_random","text":"","code":"brain_data_random"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brain_data_random.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Random Desikan region for testing brainscore function — brain_data_random","text":"Simulated data frame 34 regions 100 subject.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/brain_data_random.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Random Desikan region for testing brainscore function — brain_data_random","text":"read.csv('data-raw/desikan_centroid.csv')","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/calculate_pvals.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate P-Values — calculate_pvals","title":"Calculate P-Values — calculate_pvals","text":"function calculates p-values based provided true statistics null statistics lists. supports two methods p-value calculation: 'standard' 'split_pos_neg'.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/calculate_pvals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate P-Values — calculate_pvals","text":"","code":"calculate_pvals(   statList.true,   statList.null,   method = c(\"standard\", \"split_pos_neg\") )"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/calculate_pvals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate P-Values — calculate_pvals","text":"statList.true named list true statistics. statList.null named list null statistics corresponding true statistics. method method used p-value calculation. Either 'standard' 'split_pos_neg'. Default 'standard'.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/calculate_pvals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate P-Values — calculate_pvals","text":"list calculated p-values.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/coord_dk_lh.html","id":null,"dir":"Reference","previous_headings":"","what":"Desikan Centroid Coordinates for Left Hemisphere — coord_dk_lh","title":"Desikan Centroid Coordinates for Left Hemisphere — coord_dk_lh","text":"dataset contains centroid coordinates Desikan atlas regions left hemisphere.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/coord_dk_lh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Desikan Centroid Coordinates for Left Hemisphere — coord_dk_lh","text":"","code":"coord_dk_lh"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/coord_dk_lh.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Desikan Centroid Coordinates for Left Hemisphere — coord_dk_lh","text":"data frame rows regions columns coordinates (x, y, z).","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/coord_dk_lh.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Desikan Centroid Coordinates for Left Hemisphere — coord_dk_lh","text":"read.csv('data-raw/desikan_centroid.csv')","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/corr_brain_gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate correlations or associations between gene and brain data — corr_brain_gene","title":"Calculate correlations or associations between gene and brain data — corr_brain_gene","text":"Calculate correlations associations gene brain data","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/corr_brain_gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate correlations or associations between gene and brain data — corr_brain_gene","text":"","code":"corr_brain_gene(   gene_data,   brain_data,   method = c(\"pearson\", \"spearman\", \"pls1c\", \"pls1w\", \"custom\"),   r2z = TRUE )"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/corr_brain_gene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate correlations or associations between gene and brain data — corr_brain_gene","text":"gene_data data frame matrix gene expression data. brain_data data frame matrix brain data. method method used correlation/association. Can 'pearson', 'spearman', 'pls1c', 'pls1w', custom function provided user. r2z Logical, indicating whether convert correlation coefficients Fisher's Z scores. applicable 'pearson'.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/corr_brain_gene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate correlations or associations between gene and brain data — corr_brain_gene","text":"matrix correlation association coefficients gene data brain data.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/entrezid2symbol.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Entrez IDs to Gene Symbols — entrezid2symbol","title":"Convert Entrez IDs to Gene Symbols — entrezid2symbol","text":"function converts vector Entrez IDs gene symbols using org.Hs.eg.db annotation package.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/entrezid2symbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Entrez IDs to Gene Symbols — entrezid2symbol","text":"","code":"entrezid2symbol(entrezid)"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/entrezid2symbol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Entrez IDs to Gene Symbols — entrezid2symbol","text":"entrezid vector Entrez IDs converted gene symbols.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/entrezid2symbol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Entrez IDs to Gene Symbols — entrezid2symbol","text":"vector gene symbols corresponding input Entrez IDs.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/filter_geneSetList.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Gene Set List — filter_geneSetList","title":"Filter Gene Set List — filter_geneSetList","text":"function filters list gene sets based background genes specified size constraints.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/filter_geneSetList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Gene Set List — filter_geneSetList","text":"","code":"filter_geneSetList(bg_genes, geneSetList, minGSSize, maxGSSize)"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/filter_geneSetList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Gene Set List — filter_geneSetList","text":"bg_genes vector background gene symbols used filtering. geneSetList list gene sets filtered. minGSSize Minimum gene set size filtering. maxGSSize Maximum gene set size filtering.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/filter_geneSetList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Gene Set List — filter_geneSetList","text":"filtered list gene sets meet size constraints background genes criteria.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/find_core_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Core Genes Influencing Aggregated Score — find_core_genes","title":"Find Core Genes Influencing Aggregated Score — find_core_genes","text":"function performs Leave-One-(LOO) analysis gene sets determine core genes significantly influence aggregated score. utilizes parallel processing enhance computation efficiency.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/find_core_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Core Genes Influencing Aggregated Score — find_core_genes","text":"","code":"find_core_genes(   geneList,   geneSetList,   method,   n_cores = 1,   threshold_type = c(\"sd\", \"percentile\"),   threshold = 1 )"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/find_core_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Core Genes Influencing Aggregated Score — find_core_genes","text":"geneList matrix genes models, column representing model. geneSetList list gene sets, containing names genes. method aggregation method used compute scores. n_cores number cores use parallel processing; defaults 1. Uses available cores minus one set 0. threshold_type method determine significance ('sd' standard deviation, 'percentile' percentile threshold). threshold Numeric value specifying threshold level; meaning depends threshold_type.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/find_core_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Core Genes Influencing Aggregated Score — find_core_genes","text":"list core genes gene set.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/generate_null_brain_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Null Brain Data — generate_null_brain_data","title":"Generate Null Brain Data — generate_null_brain_data","text":"function generates null brain datasets based permutations provided perm_id. rearranges brain data according permutations outputs shuffled datasets.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/generate_null_brain_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Null Brain Data — generate_null_brain_data","text":"","code":"generate_null_brain_data(brain_data, perm_id)"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/generate_null_brain_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Null Brain Data — generate_null_brain_data","text":"brain_data matrix representing brain data, row corresponds region. perm_id matrix permutations, column represents permutation row corresponds index brain_data.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/generate_null_brain_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Null Brain Data — generate_null_brain_data","text":"matrix null brain data dimensions brain_data permuted rows according perm_id.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/gene_data_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene Expression Data for Desikan Atlas Left Hemisphere — gene_data_sample","title":"Gene Expression Data for Desikan Atlas Left Hemisphere — gene_data_sample","text":"dataset contains gene expression data fetched BrainEnrich package Desikan atlas, left hemisphere.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/gene_data_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene Expression Data for Desikan Atlas Left Hemisphere — gene_data_sample","text":"","code":"gene_data_sample"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/gene_data_sample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene Expression Data for Desikan Atlas Left Hemisphere — gene_data_sample","text":"data frame various gene expression data.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/gene_data_sample.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gene Expression Data for Desikan Atlas Left Hemisphere — gene_data_sample","text":"BrainEnrich::get_geneExp(atlas = 'desikan', rdonor = 'r0.6', hem = 'L')","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_annoData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Gene Set List based on Type and Parameters — get_annoData","title":"Get Gene Set List based on Type and Parameters — get_annoData","text":"function retrieves gene set list based specified type additional parameters.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_annoData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Gene Set List based on Type and Parameters — get_annoData","text":"","code":"get_annoData(   type = c(\"GO\", \"KEGG\", \"WikiPathways\", \"Reactome\", \"SynGO\", \"CellType\"),   parameter = NULL )"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_annoData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Gene Set List based on Type and Parameters — get_annoData","text":"type type gene set data retrieve. Must one 'GO', 'KEGG', 'WikiPathways', 'Reactome', 'SynGO', 'CellType'. parameter Additional parameter specific types like 'GO' 'CellType'. 'GO', use 'BP', 'MF', 'CC'. 'CellType', use 'Seidlitz2020', 'Lake2018', 'Martins2021'.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_annoData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Gene Set List based on Type and Parameters — get_annoData","text":"list gene sets element vector genes associated specific term.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_annoData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Gene Set List based on Type and Parameters — get_annoData","text":"function supports various types gene sets, including 'GO', 'KEGG', 'WikiPathways', 'Reactome', 'SynGO', 'CellType'. 'GO', additional parameter can 'BP', 'MF', 'CC'. 'CellType', additional parameter can 'Seidlitz2020', 'Lake2018', 'Martins2021'.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_celltype_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and process cell type gene set data — get_celltype_data","title":"Download and process cell type gene set data — get_celltype_data","text":"function downloads cell type gene set data specified resources, processes data, returns list gene sets based specified type.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_celltype_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and process cell type gene set data — get_celltype_data","text":"","code":"get_celltype_data(type = c(\"Seidlitz2020\", \"Lake2018\", \"Martins2021\"))"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_celltype_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and process cell type gene set data — get_celltype_data","text":"type type cell type gene set data download process. Must one 'Seidlitz2020', 'Lake2018', 'Martins2021'.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_celltype_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and process cell type gene set data — get_celltype_data","text":"list gene sets element vector genes associated specific term.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_celltype_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and process cell type gene set data — get_celltype_data","text":"function performs following steps based specified type: Downloads cell type gene set data provided URL. Reads data file processes create gene set list. Supports following types: Seidlitz2020: https://github.com/jms290/PolySyn_MSNs/blob/master/Data/AHBA/celltypes_PSP.csv Seidlitz, J., Nadig, ., Liu, S., Bethlehem, R. ., Vértes, P. E., Morgan, S. E., ... & Raznahan, . (2020). Transcriptomic cellular decoding regional brain vulnerability neurogenetic disorders. Nature communications, 11(1), 3358. Lake2018: https://github.com/molecular-neuroimaging/Imaging_Transcriptomics/blob/main/imaging_transcriptomics/data/geneset_LAKE.gmt Lake, B. B., Chen, S., Sos, B. C., Fan, J., Kaeser, G. E., Yung, Y. C., ... & Zhang, K. (2018). Integrative single-cell analysis transcriptional epigenetic states human adult brain. Nature biotechnology, 36(1), 70-80. Martins2021: https://github.com/molecular-neuroimaging/Imaging_Transcriptomics/blob/main/imaging_transcriptomics/data/geneset_Pooled.gmt Imaging transcriptomics: Convergent cellular, transcriptomic, molecular neuroimaging signatures healthy adult human brain. Daniel Martins, Alessio Giacomel, Steven CR Williams, Federico Turkheimer, Ottavia Dipasquale, Mattia Veronese, PET templates working group. Cell Reports.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_geneExp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Gene Expression Data — get_geneExp","title":"Get Gene Expression Data — get_geneExp","text":"function retrieves gene expression data based specified parameters. data obtained ENIGMA-TOOLBOX. Please cite ENIGMA-TOOLBOX: Larivière, S., Paquola, C., Park, B. Y., Royer, J., Wang, Y., Benkarim, O., ... & Bernhardt, B. C. (2021). ENIGMA Toolbox: multiscale neural contextualization multisite neuroimaging datasets. Nature Methods, 18(7), 698-700.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_geneExp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Gene Expression Data — get_geneExp","text":"","code":"get_geneExp(   atlas = c(\"desikan\", \"schaefer100\", \"schaefer200\", \"schaefer300\"),   rdonor = c(\"r0.2\", \"r0.4\", \"r0.6\"),   hem = c(\"L\", \"R\", \"B\") )"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_geneExp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Gene Expression Data — get_geneExp","text":"atlas Character. brain atlas use. One 'desikan', 'schaefer100', 'schaefer200'. rdonor Character. donor region use. One 'r0.2', 'r0.4', 'r0.6'. hem Character. hemisphere use. One 'L', 'R', 'B'.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_geneExp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Gene Expression Data — get_geneExp","text":"matrix containing gene expression data.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_geneSetDescription.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Gene Set Descriptions — get_geneSetDescription","title":"Get Gene Set Descriptions — get_geneSetDescription","text":"function retrieves descriptions gene sets annotation data.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_geneSetDescription.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Gene Set Descriptions — get_geneSetDescription","text":"","code":"get_geneSetDescription(annoData)"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_geneSetDescription.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Gene Set Descriptions — get_geneSetDescription","text":"annoData environment containing annotation data.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_geneSetDescription.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Gene Set Descriptions — get_geneSetDescription","text":"character vector gene set descriptions.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_geneSetList.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Gene Set List — get_geneSetList","title":"Get Gene Set List — get_geneSetList","text":"function retrieves gene set list annotation data. optionally converts gene identifiers gene symbols.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_geneSetList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Gene Set List — get_geneSetList","text":"","code":"get_geneSetList(annoData, convert_to_symbol = FALSE)"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_geneSetList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Gene Set List — get_geneSetList","text":"annoData Annotation data retrieve gene sets . convert_to_symbol Logical; TRUE, converts gene identifiers gene symbols.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_geneSetList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Gene Set List — get_geneSetList","text":"list gene sets.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_SynGO_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and process SynGO data — get_SynGO_data","title":"Download and process SynGO data — get_SynGO_data","text":"function downloads SynGO data specified URL, extracts syngo_ontologies.xlsx file, processes data create TERM2GENE TERM2NAME data frames, builds annotation using build_Anno, removes downloaded temporary files afterward.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_SynGO_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and process SynGO data — get_SynGO_data","text":"","code":"get_SynGO_data(   url = \"https://www.syngoportal.org/data/SynGO_bulk_download_release_20231201.zip\" )"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_SynGO_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and process SynGO data — get_SynGO_data","text":"url URL download SynGO data zip file . Default latest release URL.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_SynGO_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and process SynGO data — get_SynGO_data","text":"data frame containing processed SynGO data.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/get_SynGO_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and process SynGO data — get_SynGO_data","text":"function performs following steps: Downloads SynGO data zip file provided URL. Extracts syngo_ontologies.xlsx file zip archive. Reads Excel file processes data create TERM2GENE TERM2NAME data frames. Uses build_Anno function build final annotation data. Cleans removing temporary zip file extracted Excel file.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/identify_core_genes_percentile.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify core genes based on a percentile threshold — identify_core_genes_percentile","title":"Identify core genes based on a percentile threshold — identify_core_genes_percentile","text":"Identify core genes based percentile threshold","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/identify_core_genes_percentile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify core genes based on a percentile threshold — identify_core_genes_percentile","text":"","code":"identify_core_genes_percentile(changes, percentile = 90)"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/identify_core_genes_percentile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify core genes based on a percentile threshold — identify_core_genes_percentile","text":"changes Named vector changes LOO analysis. percentile Numeric value indicating percentile use threshold.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/identify_core_genes_percentile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify core genes based on a percentile threshold — identify_core_genes_percentile","text":"Vector core genes.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/identify_core_genes_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify core genes based on a standard deviation threshold — identify_core_genes_sd","title":"Identify core genes based on a standard deviation threshold — identify_core_genes_sd","text":"Identify core genes based standard deviation threshold","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/identify_core_genes_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify core genes based on a standard deviation threshold — identify_core_genes_sd","text":"","code":"identify_core_genes_sd(changes, k = 1)"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/identify_core_genes_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify core genes based on a standard deviation threshold — identify_core_genes_sd","text":"changes Named vector changes LOO analysis. k Numeric value indicating many standard deviations use threshold.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/identify_core_genes_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify core genes based on a standard deviation threshold — identify_core_genes_sd","text":"Vector core genes.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/resample_gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample Gene List — resample_gene","title":"Resample Gene List — resample_gene","text":"Generates set permuted gene lists original gene list, ensuring uniqueness permuted sets.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/resample_gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample Gene List — resample_gene","text":"","code":"resample_gene(geneList.true, n_perm = 5000)"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/resample_gene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample Gene List — resample_gene","text":"geneList.true matrix gene expression data. n_perm Number permutations generate.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/resample_gene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample Gene List — resample_gene","text":"matrix permuted gene lists.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/resample_geneSetList_matching_coexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample Gene Sets with Specified Constraints — resample_geneSetList_matching_coexp","title":"Resample Gene Sets with Specified Constraints — resample_geneSetList_matching_coexp","text":"function resamples gene sets based specific constraints like matching co-expression patterns. methodology implemented informed Wei et al. (2022) statistical testing transcriptomic-neuroimaging studies. important note restricting null models subset genes can problematic. empirical statistics sampled full gene pool differ derived restricted pool. Therefore, usage approach caution.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/resample_geneSetList_matching_coexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample Gene Sets with Specified Constraints — resample_geneSetList_matching_coexp","text":"","code":"resample_geneSetList_matching_coexp(   gene_data,   geneSetList,   tol = 0.01,   max_iter = 1e+06,   n_perm = 5000,   n_cores = 1 )"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/resample_geneSetList_matching_coexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample Gene Sets with Specified Constraints — resample_geneSetList_matching_coexp","text":"gene_data matrix data frame representing gene expression data. geneSetList list gene sets resampled. tol numeric value indicating tolerance matching co-expression patterns (default = 0.01). max_iter integer indicating maximum number iterations sampling process (default = 1000000). n_perm integer indicating number permutations generate (default = 5000). n_cores integer indicating number cores use parallel processing (default = 1).","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/resample_geneSetList_matching_coexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample Gene Sets with Specified Constraints — resample_geneSetList_matching_coexp","text":"list resampled gene sets based specified constraints.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/resample_geneSetList_matching_coexp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Resample Gene Sets with Specified Constraints — resample_geneSetList_matching_coexp","text":"Wei, Y., de Lange, S. C., Pijnenburg, R., Scholtens, L. H., Ardesch, D. J., Watanabe, K., Posthuma, D., & van den Heuvel, M. P. (2022). Statistical testing transcriptomic-neuroimaging studies: -evaluation methods assessing spatial gene specificity. Human Brain Mapping, 43(3), 885–901. https://doi.org/10.1002/hbm.25711","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/rotate_parcellation.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate Parcellation — rotate_parcellation","title":"Rotate Parcellation — rotate_parcellation","text":"Generate permutation map set cortical regions interest , (approximately) preserving contiguity hemispheric symmetry. function based rotation FreeSurfer projection coordinates set regions interest sphere. #' function modified original version available : https://github.com/frantisekvasa/rotate_parcellation","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/rotate_parcellation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate Parcellation — rotate_parcellation","text":"","code":"rotate_parcellation(   coord.l = NULL,   coord.r = NULL,   nrot = 5000,   method = c(\"hungarian\", \"vasa\"),   seed = NULL )"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/rotate_parcellation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate Parcellation — rotate_parcellation","text":"coord.l Coordinates left hemisphere regions sphere (array size n(LH regions) x 3). Can NULL right hemisphere used. coord.r Coordinates right hemisphere regions sphere (array size n(RH regions) x 3). Can NULL left hemisphere used. nrot Number rotations (default = 5000). method Method match rotated unrotated regions; options 'vasa' (faster, can suboptimal) 'hungarian' (default, slower, optimal).","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/rotate_parcellation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate Parcellation — rotate_parcellation","text":"Array permutations, set regions (array size n(total regions) x nrot).","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/rotate_parcellation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rotate Parcellation — rotate_parcellation","text":"Modifications include: Added support scenarios one hemisphere's coordinates provided. Improved handling coordinate dimensions conditional concatenation reference rotation indices. Included importFrom directives required functions matrixStats clue. Ensured function generates nrot + 100 permutations, removes duplicates, returns exactly nrot unique permutations.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/rotate_parcellation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate Parcellation — rotate_parcellation","text":"","code":"# Example usage with both hemispheres coord.l <- matrix(runif(30), nrow = 10, ncol = 3) coord.r <- matrix(runif(30), nrow = 10, ncol = 3) permutations <- rotate_parcellation(coord.l, coord.r) #> map to itself n. 1 #> permutation 100 of 6000 #> map to itself n. 2 #> map to itself n. 3 #> map to itself n. 4 #> permutation 200 of 6000 #> map to itself n. 5 #> map to itself n. 6 #> map to itself n. 7 #> map to itself n. 8 #> map to itself n. 9 #> permutation 300 of 6000 #> map to itself n. 10 #> map to itself n. 11 #> map to itself n. 12 #> map to itself n. 13 #> permutation 400 of 6000 #> permutation 500 of 6000 #> map to itself n. 14 #> permutation 600 of 6000 #> map to itself n. 15 #> permutation 700 of 6000 #> permutation 800 of 6000 #> permutation 900 of 6000 #> map to itself n. 16 #> map to itself n. 17 #> permutation 1000 of 6000 #> permutation 1100 of 6000 #> map to itself n. 18 #> map to itself n. 19 #> permutation 1200 of 6000 #> map to itself n. 20 #> map to itself n. 21 #> permutation 1300 of 6000 #> map to itself n. 22 #> permutation 1400 of 6000 #> map to itself n. 23 #> permutation 1500 of 6000 #> map to itself n. 24 #> permutation 1600 of 6000 #> permutation 1700 of 6000 #> map to itself n. 25 #> permutation 1800 of 6000 #> permutation 1900 of 6000 #> map to itself n. 26 #> permutation 2000 of 6000 #> permutation 2100 of 6000 #> permutation 2200 of 6000 #> map to itself n. 27 #> map to itself n. 28 #> permutation 2300 of 6000 #> map to itself n. 29 #> permutation 2400 of 6000 #> map to itself n. 30 #> permutation 2500 of 6000 #> map to itself n. 31 #> map to itself n. 32 #> permutation 2600 of 6000 #> map to itself n. 33 #> map to itself n. 34 #> permutation 2700 of 6000 #> permutation 2800 of 6000 #> map to itself n. 35 #> map to itself n. 36 #> map to itself n. 37 #> permutation 2900 of 6000 #> permutation 3000 of 6000 #> map to itself n. 38 #> permutation 3100 of 6000 #> map to itself n. 39 #> permutation 3200 of 6000 #> map to itself n. 40 #> permutation 3300 of 6000 #> map to itself n. 41 #> map to itself n. 42 #> permutation 3400 of 6000 #> map to itself n. 43 #> map to itself n. 44 #> map to itself n. 45 #> permutation 3500 of 6000 #> map to itself n. 46 #> permutation 3600 of 6000 #> map to itself n. 47 #> map to itself n. 48 #> permutation 3700 of 6000 #> permutation 3800 of 6000 #> map to itself n. 49 #> map to itself n. 50 #> map to itself n. 51 #> permutation 3900 of 6000 #> permutation 4000 of 6000 #> map to itself n. 52 #> permutation 4100 of 6000 #> map to itself n. 53 #> map to itself n. 54 #> permutation 4200 of 6000 #> map to itself n. 55 #> map to itself n. 56 #> map to itself n. 57 #> map to itself n. 58 #> map to itself n. 59 #> permutation 4300 of 6000 #> map to itself n. 60 #> map to itself n. 61 #> permutation 4400 of 6000 #> map to itself n. 62 #> map to itself n. 63 #> permutation 4500 of 6000 #> permutation 4600 of 6000 #> map to itself n. 64 #> permutation 4700 of 6000 #> permutation 4800 of 6000 #> map to itself n. 65 #> map to itself n. 66 #> permutation 4900 of 6000 #> permutation 5000 of 6000 #> permutation 5100 of 6000 #> map to itself n. 67 #> map to itself n. 68 #> permutation 5200 of 6000 #> map to itself n. 69 #> map to itself n. 70 #> permutation 5300 of 6000 #> map to itself n. 71 #> permutation 5400 of 6000 #> permutation 5500 of 6000 #> map to itself n. 72 #> map to itself n. 73 #> permutation 5600 of 6000 #> permutation 5700 of 6000 #> map to itself n. 74 #> map to itself n. 75 #> permutation 5800 of 6000 #> map to itself n. 76 #> map to itself n. 77 #> permutation 5900 of 6000 #> map to itself n. 78 #> permutation 6000 of 6000  # Example usage with one hemisphere (left) coord.l <- matrix(runif(30), nrow = 10, ncol = 3) permutations <- rotate_parcellation(coord.l, NULL) #> map to itself n. 1 #> permutation 100 of 6000 #> map to itself n. 2 #> map to itself n. 3 #> permutation 200 of 6000 #> map to itself n. 4 #> permutation 300 of 6000 #> map to itself n. 5 #> map to itself n. 6 #> map to itself n. 7 #> permutation 400 of 6000 #> map to itself n. 8 #> map to itself n. 9 #> map to itself n. 10 #> permutation 500 of 6000 #> map to itself n. 11 #> permutation 600 of 6000 #> map to itself n. 12 #> map to itself n. 13 #> map to itself n. 14 #> map to itself n. 15 #> permutation 700 of 6000 #> map to itself n. 16 #> map to itself n. 17 #> map to itself n. 18 #> map to itself n. 19 #> permutation 800 of 6000 #> map to itself n. 20 #> map to itself n. 21 #> map to itself n. 22 #> map to itself n. 23 #> map to itself n. 24 #> permutation 900 of 6000 #> map to itself n. 25 #> permutation 1000 of 6000 #> map to itself n. 26 #> map to itself n. 27 #> map to itself n. 28 #> map to itself n. 29 #> map to itself n. 30 #> permutation 1100 of 6000 #> map to itself n. 31 #> map to itself n. 32 #> map to itself n. 33 #> permutation 1200 of 6000 #> permutation 1300 of 6000 #> map to itself n. 34 #> map to itself n. 35 #> map to itself n. 36 #> permutation 1400 of 6000 #> map to itself n. 37 #> map to itself n. 38 #> permutation 1500 of 6000 #> map to itself n. 39 #> map to itself n. 40 #> map to itself n. 41 #> map to itself n. 42 #> map to itself n. 43 #> map to itself n. 44 #> map to itself n. 45 #> map to itself n. 46 #> permutation 1600 of 6000 #> map to itself n. 47 #> map to itself n. 48 #> map to itself n. 49 #> map to itself n. 50 #> map to itself n. 51 #> permutation 1700 of 6000 #> map to itself n. 52 #> map to itself n. 53 #> map to itself n. 54 #> permutation 1800 of 6000 #> map to itself n. 55 #> map to itself n. 56 #> map to itself n. 57 #> map to itself n. 58 #> permutation 1900 of 6000 #> map to itself n. 59 #> map to itself n. 60 #> map to itself n. 61 #> permutation 2000 of 6000 #> map to itself n. 62 #> map to itself n. 63 #> map to itself n. 64 #> permutation 2100 of 6000 #> permutation 2200 of 6000 #> map to itself n. 65 #> permutation 2300 of 6000 #> map to itself n. 66 #> permutation 2400 of 6000 #> map to itself n. 67 #> map to itself n. 68 #> map to itself n. 69 #> map to itself n. 70 #> map to itself n. 71 #> map to itself n. 72 #> permutation 2500 of 6000 #> map to itself n. 73 #> map to itself n. 74 #> map to itself n. 75 #> map to itself n. 76 #> permutation 2600 of 6000 #> map to itself n. 77 #> map to itself n. 78 #> permutation 2700 of 6000 #> map to itself n. 79 #> permutation 2800 of 6000 #> map to itself n. 80 #> map to itself n. 81 #> map to itself n. 82 #> map to itself n. 83 #> map to itself n. 84 #> permutation 2900 of 6000 #> map to itself n. 85 #> permutation 3000 of 6000 #> map to itself n. 86 #> map to itself n. 87 #> map to itself n. 88 #> map to itself n. 89 #> permutation 3100 of 6000 #> map to itself n. 90 #> permutation 3200 of 6000 #> map to itself n. 91 #> permutation 3200 of 6000 #> map to itself n. 92 #> map to itself n. 93 #> permutation 3300 of 6000 #> map to itself n. 94 #> map to itself n. 95 #> map to itself n. 96 #> map to itself n. 97 #> map to itself n. 98 #> permutation 3400 of 6000 #> map to itself n. 99 #> map to itself n. 100 #> map to itself n. 101 #> permutation 3500 of 6000 #> map to itself n. 102 #> map to itself n. 103 #> map to itself n. 104 #> permutation 3600 of 6000 #> map to itself n. 105 #> map to itself n. 106 #> map to itself n. 107 #> permutation 3700 of 6000 #> permutation 3800 of 6000 #> map to itself n. 108 #> map to itself n. 109 #> permutation 3900 of 6000 #> map to itself n. 110 #> map to itself n. 111 #> map to itself n. 112 #> map to itself n. 113 #> map to itself n. 114 #> permutation 4000 of 6000 #> map to itself n. 115 #> map to itself n. 116 #> map to itself n. 117 #> map to itself n. 118 #> map to itself n. 119 #> map to itself n. 120 #> permutation 4100 of 6000 #> map to itself n. 121 #> map to itself n. 122 #> permutation 4200 of 6000 #> map to itself n. 123 #> map to itself n. 124 #> map to itself n. 125 #> permutation 4300 of 6000 #> permutation 4400 of 6000 #> map to itself n. 126 #> map to itself n. 127 #> map to itself n. 128 #> permutation 4500 of 6000 #> map to itself n. 129 #> map to itself n. 130 #> permutation 4600 of 6000 #> map to itself n. 131 #> map to itself n. 132 #> permutation 4700 of 6000 #> map to itself n. 133 #> map to itself n. 134 #> permutation 4800 of 6000 #> map to itself n. 135 #> map to itself n. 136 #> map to itself n. 137 #> permutation 4900 of 6000 #> map to itself n. 138 #> permutation 5000 of 6000 #> map to itself n. 139 #> permutation 5100 of 6000 #> map to itself n. 140 #> permutation 5200 of 6000 #> map to itself n. 141 #> map to itself n. 142 #> map to itself n. 143 #> map to itself n. 144 #> permutation 5300 of 6000 #> map to itself n. 145 #> map to itself n. 146 #> permutation 5400 of 6000 #> map to itself n. 147 #> map to itself n. 148 #> map to itself n. 149 #> map to itself n. 150 #> permutation 5500 of 6000 #> map to itself n. 151 #> map to itself n. 152 #> map to itself n. 153 #> permutation 5600 of 6000 #> map to itself n. 154 #> map to itself n. 155 #> permutation 5700 of 6000 #> map to itself n. 156 #> permutation 5700 of 6000 #> map to itself n. 157 #> permutation 5800 of 6000 #> map to itself n. 158 #> map to itself n. 159 #> map to itself n. 160 #> map to itself n. 161 #> map to itself n. 162 #> permutation 5900 of 6000 #> map to itself n. 163 #> map to itself n. 164 #> permutation 6000 of 6000  # Example usage with one hemisphere (right) coord.r <- matrix(runif(30), nrow = 10, ncol = 3) permutations <- rotate_parcellation(NULL, coord.r) #> permutation 100 of 6000 #> map to itself n. 1 #> permutation 200 of 6000 #> map to itself n. 2 #> map to itself n. 3 #> map to itself n. 4 #> permutation 300 of 6000 #> map to itself n. 5 #> map to itself n. 6 #> map to itself n. 7 #> permutation 400 of 6000 #> map to itself n. 8 #> permutation 500 of 6000 #> map to itself n. 9 #> permutation 600 of 6000 #> map to itself n. 10 #> map to itself n. 11 #> map to itself n. 12 #> permutation 700 of 6000 #> map to itself n. 13 #> map to itself n. 14 #> permutation 800 of 6000 #> map to itself n. 15 #> map to itself n. 16 #> map to itself n. 17 #> map to itself n. 18 #> permutation 900 of 6000 #> map to itself n. 19 #> map to itself n. 20 #> permutation 1000 of 6000 #> map to itself n. 21 #> permutation 1100 of 6000 #> map to itself n. 22 #> map to itself n. 23 #> permutation 1200 of 6000 #> map to itself n. 24 #> permutation 1300 of 6000 #> permutation 1400 of 6000 #> map to itself n. 25 #> map to itself n. 26 #> map to itself n. 27 #> map to itself n. 28 #> map to itself n. 29 #> map to itself n. 30 #> map to itself n. 31 #> map to itself n. 32 #> permutation 1500 of 6000 #> map to itself n. 33 #> permutation 1600 of 6000 #> map to itself n. 34 #> permutation 1700 of 6000 #> map to itself n. 35 #> map to itself n. 36 #> map to itself n. 37 #> map to itself n. 38 #> permutation 1800 of 6000 #> permutation 1900 of 6000 #> map to itself n. 39 #> map to itself n. 40 #> map to itself n. 41 #> map to itself n. 42 #> map to itself n. 43 #> permutation 2000 of 6000 #> map to itself n. 44 #> permutation 2100 of 6000 #> map to itself n. 45 #> map to itself n. 46 #> permutation 2200 of 6000 #> map to itself n. 47 #> permutation 2300 of 6000 #> map to itself n. 48 #> permutation 2400 of 6000 #> permutation 2500 of 6000 #> map to itself n. 49 #> permutation 2600 of 6000 #> permutation 2700 of 6000 #> map to itself n. 50 #> map to itself n. 51 #> permutation 2800 of 6000 #> map to itself n. 52 #> map to itself n. 53 #> map to itself n. 54 #> map to itself n. 55 #> map to itself n. 56 #> map to itself n. 57 #> permutation 2900 of 6000 #> map to itself n. 58 #> permutation 3000 of 6000 #> map to itself n. 59 #> map to itself n. 60 #> map to itself n. 61 #> map to itself n. 62 #> permutation 3100 of 6000 #> map to itself n. 63 #> map to itself n. 64 #> map to itself n. 65 #> permutation 3200 of 6000 #> map to itself n. 66 #> map to itself n. 67 #> map to itself n. 68 #> map to itself n. 69 #> permutation 3300 of 6000 #> map to itself n. 70 #> map to itself n. 71 #> map to itself n. 72 #> map to itself n. 73 #> map to itself n. 74 #> permutation 3400 of 6000 #> map to itself n. 75 #> map to itself n. 76 #> map to itself n. 77 #> permutation 3500 of 6000 #> map to itself n. 78 #> map to itself n. 79 #> permutation 3600 of 6000 #> map to itself n. 80 #> map to itself n. 81 #> map to itself n. 82 #> permutation 3700 of 6000 #> map to itself n. 83 #> map to itself n. 84 #> permutation 3800 of 6000 #> map to itself n. 85 #> permutation 3900 of 6000 #> permutation 4000 of 6000 #> map to itself n. 86 #> permutation 4100 of 6000 #> map to itself n. 87 #> map to itself n. 88 #> permutation 4200 of 6000 #> map to itself n. 89 #> map to itself n. 90 #> map to itself n. 91 #> map to itself n. 92 #> permutation 4300 of 6000 #> map to itself n. 93 #> permutation 4400 of 6000 #> map to itself n. 94 #> map to itself n. 95 #> permutation 4500 of 6000 #> map to itself n. 96 #> map to itself n. 97 #> map to itself n. 98 #> map to itself n. 99 #> permutation 4600 of 6000 #> map to itself n. 100 #> map to itself n. 101 #> map to itself n. 102 #> map to itself n. 103 #> permutation 4700 of 6000 #> map to itself n. 104 #> map to itself n. 105 #> map to itself n. 106 #> map to itself n. 107 #> map to itself n. 108 #> permutation 4800 of 6000 #> map to itself n. 109 #> map to itself n. 110 #> permutation 4900 of 6000 #> map to itself n. 111 #> map to itself n. 112 #> map to itself n. 113 #> permutation 5000 of 6000 #> map to itself n. 114 #> permutation 5100 of 6000 #> map to itself n. 115 #> permutation 5200 of 6000 #> map to itself n. 116 #> map to itself n. 117 #> permutation 5300 of 6000 #> map to itself n. 118 #> permutation 5400 of 6000 #> map to itself n. 119 #> map to itself n. 120 #> map to itself n. 121 #> map to itself n. 122 #> permutation 5500 of 6000 #> map to itself n. 123 #> permutation 5500 of 6000 #> permutation 5600 of 6000 #> map to itself n. 124 #> map to itself n. 125 #> permutation 5700 of 6000 #> map to itself n. 126 #> map to itself n. 127 #> map to itself n. 128 #> map to itself n. 129 #> permutation 5800 of 6000 #> map to itself n. 130 #> map to itself n. 131 #> permutation 5900 of 6000 #> map to itself n. 132 #> map to itself n. 133 #> permutation 6000 of 6000"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/sample_gs_matching_coexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Gene Sets Matching Co-Expression — sample_gs_matching_coexp","title":"Sample Gene Sets Matching Co-Expression — sample_gs_matching_coexp","text":"function samples gene sets closely match co-expression profile target gene set. methodology implemented informed Wei et al. (2022) statistical testing transcriptomic-neuroimaging studies.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/sample_gs_matching_coexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Gene Sets Matching Co-Expression — sample_gs_matching_coexp","text":"","code":"sample_gs_matching_coexp(   gs,   coexp_matrix,   tol = 0.01,   max_iter = 1e+06,   n_target = 5000 )"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/sample_gs_matching_coexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Gene Sets Matching Co-Expression — sample_gs_matching_coexp","text":"gs target gene set similar co-expression profiles sought. coexp_matrix co-expression matrix, typically calculated correlation matrix gene expression data. tol Tolerance difference co-expression target sampled gene sets. max_iter Maximum number iterations attempt finding matches. n_target Number gene sets sample.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/sample_gs_matching_coexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Gene Sets Matching Co-Expression — sample_gs_matching_coexp","text":"list gene sets closely match target gene set's co-expression profile.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/sample_gs_matching_coexp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sample Gene Sets Matching Co-Expression — sample_gs_matching_coexp","text":"Wei, Y., de Lange, S. C., Pijnenburg, R., Scholtens, L. H., Ardesch, D. J., Watanabe, K., Posthuma, D., & van den Heuvel, M. P. (2022). Statistical testing transcriptomic-neuroimaging studies: -evaluation methods assessing spatial gene specificity. Human Brain Mapping, 43(3), 885–901. https://doi.org/10.1002/hbm.25711","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/swap_geneList.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap Gene List — swap_geneList","title":"Swap Gene List — swap_geneList","text":"function swaps original values gene set (orig_gs) sampled gene sets (sampled_gs) within given geneList.true. resulting geneList.null format generated approaches.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/swap_geneList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap Gene List — swap_geneList","text":"","code":"swap_geneList(geneList.true, orig_gs, sampled_gs)"},{"path":"https://zh1peng.github.io/BrainEnrich/reference/swap_geneList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap Gene List — swap_geneList","text":"geneList.true matrix representing true gene list, dimensions m x 1. orig_gs vector original gene set identifiers. sampled_gs list sampled gene sets, vector gene identifiers.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/swap_geneList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swap Gene List — swap_geneList","text":"matrix column represents null gene list generated swapping orig_gs set sampled_gs.","code":""},{"path":"https://zh1peng.github.io/BrainEnrich/reference/swap_geneList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Swap Gene List — swap_geneList","text":"","code":"geneList.true <- matrix(1:10, ncol = 1) rownames(geneList.true) <- letters[1:10] orig_gs <- c(\"a\", \"b\", \"c\") sampled_gs <- list(c(\"d\", \"e\", \"f\"), c(\"g\", \"h\", \"i\")) swap_geneList(geneList.true, orig_gs, sampled_gs) #> Error in swap_geneList(geneList.true, orig_gs, sampled_gs): could not find function \"swap_geneList\""}]
